plugins {
    id 'fabric-loom' version '0.9-SNAPSHOT'
    id "com.modrinth.minotaur" version "1.2.1"
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = "${project.minecraft_version}-${project.mod_version}"
group = project.maven_group

repositories {
    maven {
        url "https://www.cursemaven.com"
    }
    maven {
        url 'https://api.modrinth.com/maven'
    }
}

loom {
    accessWidenerPath = file("src/main/resources/masa_gadget_mod.accesswidener")
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.

    modImplementation "curse.maven:malilib-303119:${project.malilib_version}"
    modImplementation "curse.maven:minihud-244260:${project.minihud_version}"
    modImplementation "curse.maven:tweakeroo-297344:${project.tweakeroo_version}"
    modImplementation "curse.maven:litematica-308892:${project.litematica_version}"
    modImplementation "net.earthcomputer.multiconnect:multiconnect-api:${project.multiconnect_version}"
    include "net.earthcomputer.multiconnect:multiconnect-api:${project.multiconnect_version}"
    modImplementation "maven.modrinth:modmenu:${project.mod_menu_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // Minecraft 1.17 (21w19a) upwards uses Java 16.
    it.options.release = 16
}

import com.modrinth.minotaur.TaskModrinthUpload

task publishModrinth(type: TaskModrinthUpload) {
    onlyIf {
        System.getenv("MODRINTH") // Only attempt to run this task if the MODRINTH variable is set, otherwise SKIP it
    }

    token = System.getenv("MODRINTH")
    projectId = 'SFO4Ca80'
    versionNumber = version
    // On fabric, use 'remapJar' instead of 'jar'
    uploadFile = remapJar
    // addGameVersion(project.minecraft_version)
    addGameVersion("1.17.1")
    addLoader('fabric')
}


java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
